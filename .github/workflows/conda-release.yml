name: conda release

on:
  push:

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install jq
        run: sudo apt-get install -y jq
      - name: fetch wheels
        run: |
          mkdir -p ./dist
          cd ./dist
          curl  -L https://pypi.python.org/pypi/blobtk/json | jq -r '.releases["0.2.4"] | map(.url) | map(select(test("10_7") | not))' | \
          while read URL; do
            wget $URL
          done

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  create-github-release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs:
      - macos
      - linux
    if: "startsWith(github.ref, 'refs/tags/')"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: binaries
          path: ./dist
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: ./dist
      - name: create release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: false
          prerelease: false
          title: "v${{github.ref_name}}"
          files: |
            dist/blobtk-macos
            dist/blobtk-linux
            dist/blobtk*.tgz

  upload-to-pypi:
    name: Upload to PyPI
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [macos, linux]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *

  publish-crate:
    name: Publish crate
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: create-github-release
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Publish
        working-directory: ./rust
        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}

  create-conda-release-macos:
    name: Create conda release Mac
    runs-on: macos-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: create-github-release
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: ./dist
      - name: copy files
        run: |
          mkdir -p ./conda/dist
          cp ./dist/*macos*.whl ./conda/dist/
      - name: conda build
        run: |
          ANACONDA_API_TOKEN=${{ secrets.ANACONDA_API_TOKEN }}
          conda build ./conda

  create-conda-release-linux:
    name: Create conda release Linux
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: create-github-release
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: ./dist
      - name: copy files
        run: |
          mkdir -p ./conda/dist
          cp ./dist/*linux*.whl ./conda/dist/
      - name: conda build
        run: |
          ANACONDA_API_TOKEN=${{ secrets.ANACONDA_API_TOKEN }}
          conda build ./conda
